load("@build_bazel_rules_apple//apple:ios.bzl", "ios_application")
load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library")
load("@build_bazel_rules_swift//swift:swift.bzl", "swift_binary")
load("@gazelle//:def.bzl", "gazelle", "gazelle_binary")
load(
    "@rules_xcodeproj//xcodeproj:defs.bzl",
    "top_level_target",
    "xcodeproj",
)

# Ignore the `.build` folder that is created by running Swift package manager
# commands. Be sure to configure your source control to ignore it, as well.
# (i.e., add it to your `.gitignore`).
# NOTE: Swift package manager is not used to build any of the external packages.
# gazelle:exclude .build

# This declaration builds a Gazelle binary that incorporates all of the Gazelle
# plugins for the languages that you use in your workspace. In this example, we
# are only listing the Gazelle plugin for Swift from rules_swift_package_manager.
gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@rules_swift_package_manager//gazelle",
    ],
)

# # This target updates the Bazel build files for your project. Run this target
# # whenever you add or remove source files from your project. The
# # `swift_deps_info` repository is generated by `rules_swift_package_manager`. It
# # creates a target, `@swift_deps_info//:swift_deps_index`, that generates a JSON
# # file which maps Swift module names to their respective Bazel target.
# gazelle(
#     name = "update_build_files",
#     data = [
#         "@swift_deps_info//:swift_deps_index",
#     ],
#     extra_args = [
#         "-swift_dependency_index=$(location @swift_deps_info//:swift_deps_index)",
#     ],
#     gazelle = ":gazelle_bin",
# )

swift_library(
    name = "SwiftlyHttp",
    srcs = glob(["generics-shared/Sources/SwiftlyHttp/**/*.swift"]),
)

swift_library(
    name = "GenericsUI",
    srcs = glob(["generics-shared/Sources/GenericsUI/**/*.swift"]),
)

swift_library(
    name = "GenericsHelpers",
    srcs = glob(["generics-shared/Sources/GenericsHelpers/**/*.swift"]),
)

swift_library(
    name = "GenericsCore",
    srcs = glob(["generics-shared/Sources/GenericsCore/**/*.swift"]),
    deps = [
        ":SwiftlyHttp",
        "@swiftpkg_swift_spyable//:Spyable",
        "@swiftpkg_factory//:Factory",
        ":GenericsHelpers"
    ],
)

swift_library(
    name = "SharedModels",
    srcs = glob(["generics-server/Sources/SharedModels/**/*.swift"]),
)

swift_library(
    name = "CustomerMenu",
    srcs = glob(["generics-shared/Sources/Features/CustomerMenu/**/*.swift"]),
    deps = [
        ":GenericsCore",
        ":GenericsUI",
        ":SharedModels",
        ":SwiftlyHttp",
        "@swiftpkg_factory//:Factory",
    ],
)

swift_library(
    name = "CustomerCart",
    srcs = glob(["generics-shared/Sources/Features/CustomerCart/**/*.swift"]),
    deps = [
        ":GenericsCore",
        ":GenericsUI",
        ":SharedModels",
        ":SwiftlyHttp",
        "@swiftpkg_factory//:Factory",
    ],
)

swift_library(
    name = "lib",
    srcs = glob(["generics-apps/GenericsApp/GenericsApp/*.swift"]),
    deps = [":CustomerMenu", ":CustomerCart"],
)

ios_application(
    name = "GenericsApp",
    bundle_id = "build.bazel.rules-apple-example",
    families = [
        "iphone",
        "ipad",
    ],
    infoplists = ["Info_bazel.plist"],
    minimum_os_version = "17.0",
    visibility = ["//visibility:public"],
    deps = [":lib"],
)

swift_binary(
    name = "server",
    srcs = glob(["generics-server/Sources/Server/**/*.swift"]),
    deps = [
        ":SharedModels",
        "@swiftpkg_fluent//:Fluent",
        "@swiftpkg_fluent_postgres_driver//:FluentPostgresDriver",
        "@swiftpkg_pathkit//:PathKit",
        "@swiftpkg_soto//:SotoS3",
        "@swiftpkg_vapor//:Vapor",
    ]
)

xcodeproj(
    name = "xcodeproj",
    build_mode = "bazel",
    project_name = "Generics",
    tags = ["manual"],
    top_level_targets = [
        ":GenericsApp",
    ],

)
