{
  "openapi": "3.0.0",
  "info": {
    "title": "Generic's Pizza Rest API",
    "description": "This is the Rest API that is used by Generic's Pizza Apps.",
    "version": "0.0.1"
  },
  "paths": {
    "/menu": {
      "get": {
        "summary": "Get all menu items.",
        "responses": {
          "200": {
            "description": "A JSON array of menu items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new menu item.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The newly created menu item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          }
        }
      }
    },
    "/menu/{id}": {
      "delete": {
        "summary": "Delete a menu item.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the menu item."
          }
        ],
        "responses": {
          "200": {
            "description": "Item was successfully deleted."
          }
        }
      }
    },
    "/menu/{id}/image": {
      "get": {
        "summary": "Get the menu item image.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the menu item."
          }
        ],
        "responses": {
          "200": {
            "description": "Image bytes"
          }
        }
      },
      "post": {
        "summary": "Set the menu item image.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "summary": "Delete the menu item image.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/order": {
      "post": {
        "summary": "Create a new order.",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          }
        }
      }
    },
    "/order/check_price": {
      "post": {
        "summary": "Check price for an order.",
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/order/check_location": {
      "post": {
        "summary": "Get the location of the restaurant.",
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/order/current": {
      "get": {
        "summary": "Get the current orders.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order/history": {
      "get": {
        "summary": "Get all finished orders.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user": {
      "post": {
        "summary": "Create a new user account.",
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "get": {
        "summary": "Get info about current user.",
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login and get an auth token.",
        "security": [
          {
            "BearerBasic": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/auth": {
      "get": {
        "summary": "Check the current user account.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "summary": "Sign out deleting auth token.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get all users.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the user."
          }
        ],
        "summary": "Delete a user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the user."
          }
        ],
        "summary": "Update a user's access.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },

    "schemas": {
      "MenuItem": {
        "type": "object",
        "required": ["title", "description", "price"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "OrderModel": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "menuItem": {},
                "count": {
                  "type": "number"
                }
              }
            }
          },
          "state": {
            "enum": [
              " new",
              "inProgress",
              "readyForDelivery",
              "inDelivery",
              "finished"
            ]
          },
          "destination": {
            "type": "object"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["email", "access"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "access": {
            "enum": ["client", "employee", "admin"]
          }
        }
      }
    }
  }
}
