bazel_dep(name = "apple_support", version = "1.15.1")
bazel_dep(name = "rules_swift", version = "1.18.0", repo_name = "build_bazel_rules_swift")
bazel_dep(name = "rules_apple", version = "3.6.0", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "rules_swift_package_manager", version = "0.34.1")
bazel_dep(name = "gazelle", version = "0.37.0")
bazel_dep(name = "rules_xcodeproj", version = "2.4.0")

# Sloppy temporary fix for https://github.com/cgrindel/rules_swift_package_manager/issues/1111
git_override(
    module_name = "rules_swift_package_manager",
    remote = "https://github.com/roya1v/rules_swift_package_manager",
    commit = "f251a7fb6838364e051a954d7ebfe10819190b77",  # You can use a branch or tag instead of a commit hash
)

swift_deps = use_extension(
    "@rules_swift_package_manager//:extensions.bzl",
    "swift_deps",
)
swift_deps.from_package(
    declare_swift_deps_info = True,
    resolved = "//:Package.resolved",
    swift = "//:Package.swift",
)
use_repo(
    swift_deps,
    "swift_deps_info",
    "swiftpkg_factory",
    "swiftpkg_fluent",
    "swiftpkg_fluent_postgres_driver",
    "swiftpkg_pathkit",
    "swiftpkg_soto",
    "swiftpkg_swift_composable_architecture",
    "swiftpkg_swift_spyable",
    "swiftpkg_vapor",
    # The name of the Swift package repositories will be added to this declaration in step 4 after
    # running `bazel mod tidy`.
    # NOTE: The name of the Bazel external repository for a Swift package is `swiftpkg_xxx` where
    # `xxx` is the Swift package identity, lowercase, with punctuation replaced by `hyphen`. For
    # example, the repository name for apple/swift-nio is `swiftpkg_swift_nio`.
)
